#!/usr/bin/env php
<?php
/*
 * This file is part of PHPUnit.
 *
 * (c) Sebastian Bergmann <sebastian@phpunit.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

if (version_compare('5.3.3', PHP_VERSION, '>')) {
    fwrite(
        STDERR,
        sprintf(
            'This version of PHPUnit is supported on PHP 5.3, PHP 5.4, PHP 5.5, and PHP 5.6.' . PHP_EOL .
            'You are using PHP %s%s.' . PHP_EOL,
            PHP_VERSION,
            defined('PHP_BINARY') ? ' (' . PHP_BINARY . ')' : ''
        )
    );

    die(1);
}

if (!ini_get('date.timezone')) {
    ini_set('date.timezone', 'UTC');
}

$composerInstall = '';
foreach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        $composerInstall = $file;

        break;
    }
}

unset($file);

if (!$composerInstall) {
    fwrite(STDERR,
        'You need to set up the project dependencies using Composer:' . PHP_EOL . PHP_EOL .
        '    composer install' . PHP_EOL . PHP_EOL .
        'You can learn all about Composer on https://getcomposer.org/.' . PHP_EOL
    );

    die(1);
}

$softMocksPathOld = '';
foreach (array(__DIR__ . '/../../badoo/soft-mocks/src/QA/SoftMocks.php', __DIR__ . '/../../../src/QA/SoftMocks.php') as $file) {
    if (file_exists($file)) {
        $softMocksPathOld = $file;

    }
}
unset($file);
$softMocksPath = '';
foreach (array(__DIR__ . '/../../badoo/soft-mocks/src/Badoo/SoftMocks.php', __DIR__ . '/../../../src/Badoo/SoftMocks.php') as $file) {
    if (file_exists($file)) {
        $softMocksPath = $file;

    }
}
unset($file);

if ($softMocksPath) {
    $php_parser_dir = dirname($composerInstall) . '/nikic/php-parser/lib/PhpParser/';
    require_once "{$php_parser_dir}Autoloader.php";
    \PhpParser\Autoloader::register(true);
    // for prevent autoload problems
    $files = [];
    exec('find ' . escapeshellarg($php_parser_dir) . " -type f -name '*.php'", $files);
    foreach ($files as $file) {
        require_once $file;
    }
    unset($files, $file);

    require_once $softMocksPath;
    // @TODO should be removed after 2.0.0
    require_once $softMocksPathOld;
    \Badoo\SoftMocks::setIgnoreSubPaths(
        array(
            '/vendor/phpunit/' => '/vendor/phpunit/',
            '/vendor/sebastian/diff/' => '/vendor/sebastian/diff/',
            '/vendor/nikic/php-parser/' => '/vendor/nikic/php-parser/',
            '/vendor/symfony/polyfill' => '/vendor/symfony/polyfill',
        )
    );
    \Badoo\SoftMocks::init();
    $composerInstall = \Badoo\SoftMocks::rewrite($composerInstall);
    require $composerInstall;
    // inject soft-mocks into phpunit
    class_exists(PHPUnit_Util_Fileloader::class);
    \Badoo\SoftMocks::injectIntoPhpunit();
} else {
    require $composerInstall;
}
define('PHPUNIT_COMPOSER_INSTALL', $composerInstall);
unset($softMocksPath);
unset($composerInstall);

PHPUnit_TextUI_Command::main();
